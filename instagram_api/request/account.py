from typing import List

from instagram_api import response

from .base import CollectionBase

__all__ = ['Account']


class Account(CollectionBase):

    def get_current_user(self) -> response.UserInfoResponse: ...

    def set_biography(self, biography: str) -> response.UserInfoResponse: ...

    def set_gender(self, gender: str = '') -> response.UserInfoResponse: ...

    def edit_profile(self,
                     url: str,
                     phone: str,
                     name: str,
                     biography: str,
                     email: str,
                     gender: str,
                     new_username: str = None) -> response.UserInfoResponse: ...

    def change_profile_picture(self, filename: str) -> response.UserInfoResponse: ...

    def remove_profile_picture(self) -> response.UserInfoResponse: ...

    def set_public(self) -> response.UserInfoResponse: ...

    def set_private(self) -> response.UserInfoResponse: ...

    def switch_to_business_profile(self) -> response.SwitchBusinessProfileResponse: ...

    def switch_to_personal_profile(self) -> response.SwitchPersonalProfileResponse: ...

    def set_business_info(self,
                          phone_number: str,
                          email: str,
                          category_id: str) -> response.CreateBusinessInfoResponse: ...

    def check_username(self, username: str) -> response.CheckUsernameResponse: ...

    def get_comment_filter(self) -> response.CommentFilterResponse: ...

    def set_comment_filter(self, config_value: int) -> response.CommentFilterSetResponse: ...

    def get_comment_category_filter_disabled(self) -> response.CommentCategoryFilterResponse: ...

    def get_comment_filter_keywords(self) -> response.CommentFilterKeywordsResponse: ...

    def set_comment_filter_keywords(self, keywords: List[str]) -> response.CommentFilterSetResponse: ...

    def change_password(self, old_password: str, new_password: str) -> response.ChangePasswordResponse: ...

    def get_security_info(self) -> response.AccountSecurityInfoResponse: ...

    def send_two_factor_enable_sms(self, phone_number: str) -> response.SendTwoFactorEnableSMSResponse: ...

    def enable_two_factor_sms(self,
                              phone_number: str,
                              verification_code: str) -> response.EnableTwoFactorSMSResponse: ...

    def disable_two_factor_sms(self) -> response.DisableTwoFactorSMSResponse: ...

    def get_presence_status(self) -> response.PresenceStatusResponse: ...

    def enable_presence(self) -> response.GenericResponse: ...

    def disable_presence(self) -> response.GenericResponse: ...

    def send_confirm_email(self) -> response.SendConfirmEmailResponse: ...

    def send_sms_code(self, phone_number: str) -> response.SendSMSCodeResponse: ...

    def verify_sms_code(self, phone_number: str, verification_code: str) -> response.VerifySMSCodeResponse: ...

    def set_contact_point_prefill(self, usage: str) -> response.GenericResponse:
        return self._ig.request('accounts/contact_point_prefill/').set_needs_auth(False).add_posts(**{
            'phone_id': self._ig.phone_id,
            '_csrftoken': self._ig.client.get_token(),
            'usage': usage,
        }).get_response(response.GenericResponse)

    def get_badge_notifications(self) -> response.BadgeNotificationsResponse: ...

    def get_process_contact_point_signals(self) -> response.GenericResponse: ...
